<clr-modal [(clrModalOpen)]="opened" [clrModalStaticBackdrop]="true" [clrModalSize]="'xl'">
    <h3 class="modal-title">{{'<%= angularAppName %>.<%= entityTranslationKey %>.selectDialog.title' | translate}}</h3>
    <div class="modal-body">
        <jhi-alert-error></jhi-alert-error>

        <div class="card card-block" *ngIf="multiSelect">
            <span class="label-group-title">{{'entity.selectDialog.selected' | translate}}:</span>
            <span *ngIf="selected.length < 1">
                {{'entity.filter.none' | translate}}
            </span>
            <span class="label" *ngFor="let item of selected" (click)="remove(item)">
                {{item.id}}
                <clr-icon shape="window-close"></clr-icon>
            </span> 
            <button *ngIf="selected.length > 0" class="btn btn-sm btn-link btn-warning remove-all" (click)="selected = []">
                {{'entity.selectDialog.clear' | translate}}
            </button>
        </div>

        <%_for(let i = 0; i < 2; i++) {_%>
        <clr-datagrid
            *ngIf="<%_ if(i === 0) { _%>!<%_ } _%>multiSelect"
            <%_ if (pagination !== 'no') { _%>
            (clrDgRefresh)="refresh($event)"
            <%_ } _%>
            [clrDgLoading]="loading"
            [clDgRowSelection]="true"
            <%_ if(i === 0) { _%>
            [(clrDgSingleSelected)]="selected"
            <%_ } else if(i === 1) { _%>
            [(clrDgSelected)]="selected"
            <%_ } _%>
        >
            <clr-dg-column [clrDgField]="'id'"<%_ if (pagination === 'pagination' || pagination === 'pager'){ _%>[clrDgSortOrder]="sorters.id"<%_ } _%>>
                <ng-container *clrDgHideableColumn="{hidden: true}">
                    {{'global.field.id' | translate }}
                </ng-container>
                <clr-dg-filter [clrDgFilter]="idFilter">
                    <<%= jhiPrefixDashed %>-number-filter #idFilter
                                    [clrDgField]="'idFilter'"
                                    <%_ if (pagination === 'pagination' || pagination === 'pager'){ _%>
                                    [(clrFilterValue)]="filters.id"
                                    <%_ } _%>>
                    </<%= jhiPrefixDashed %>-number-filter>
                </clr-dg-filter>
            </clr-dg-column>
            <%_ for (idx in fields) { _%>
            <clr-dg-column [clrDgField]="'<%= fields[idx].fieldName%>'" <%_ if (pagination === 'pagination' || pagination === 'pager'){ _%> [clrDgSortOrder]="sorters.<%= fields[idx].fieldName%>"<%_ } _%>>

                            <ng-container *clrDgHideableColumn="{hidden: false}">
                            {{'<%=`${i18nKeyPrefix}.${fields[idx].fieldName}` %>' | translate}}
                            </ng-container>

                            <%_ if (fields[idx].fieldType === 'String') { _%>
                            <clr-dg-filter [clrDgFilter]="<%= fields[idx].fieldName%>Filter">
                                <<%= jhiPrefixDashed %>-string-filter #<%= fields[idx].fieldName%>Filter
                                                [clrDgField]="'<%= fields[idx].fieldName%>'"
                                                <%_ if (pagination === 'pagination' || pagination === 'pager'){ _%>
                                                [(clrFilterValue)]="filters.<%= fields[idx].fieldName%>"
                                                <%_ } _%>>
                                </<%= jhiPrefixDashed %>-string-filter>
                            </clr-dg-filter>
                            <%_ } else if (fields[idx].fieldType === 'Integer' || fields[idx].fieldType === 'BigDecimal' || fields[idx].fieldType === 'Float' || fields[idx].fieldType === 'Double' || fields[idx].fieldType === 'Long') { _%>
                            <clr-dg-filter [clrDgFilter]="<%= fields[idx].fieldName%>Filter">
                                <<%= jhiPrefixDashed %>-number-filter #<%= fields[idx].fieldName%>Filter
                                                [clrDgField]="'<%= fields[idx].fieldName%>'"
                                                <%_ if (pagination === 'pagination' || pagination === 'pager'){ _%>
                                                [(clrFilterValue)]="filters.<%= fields[idx].fieldName%>"
                                                <%_ } _%>>
                                </<%= jhiPrefixDashed %>-number-filter>
                            </clr-dg-filter>
                            <%_ } else if (fields[idx].fieldType === 'LocalDate' || fields[idx].fieldType === 'Instant' || fields[idx].fieldType === 'ZonedDateTime' ) { _%>
                            <clr-dg-filter [clrDgFilter]="<%= fields[idx].fieldName%>Filter">
                                <<%= jhiPrefixDashed %>-date-filter #<%= fields[idx].fieldName%>Filter
                                                [clrDgField]="'<%= fields[idx].fieldName%>'"
                                                <%_ if (pagination === 'pagination' || pagination === 'pager'){ _%>
                                                [(clrFilterValue)]="filters.<%= fields[idx].fieldName%>"
                                                <%_ } _%>>
                                </<%= jhiPrefixDashed %>-date-filter>
                            </clr-dg-filter>
                            <%_ } else if (fields[idx].fieldType === 'Boolean') { _%>
                            <clr-dg-filter [clrDgFilter]="<%= fields[idx].fieldName%>Filter">
                                <<%= jhiPrefixDashed %>-boolean-filter #<%= fields[idx].fieldName%>Filter
                                    [clrDgField]="'<%= fields[idx].fieldName%>'"
                                    <%_ if (pagination === 'pagination' || pagination === 'pager'){ _%>
                                        [(clrFilterValue)]="filters.<%= fields[idx].fieldName%>"
                                    <%_ } _%>>
                                </<%= jhiPrefixDashed %>-boolean-filter>
                            </clr-dg-filter>
                            <%_ } else if (fields[idx].fieldType === 'Enumeration') { _%>
                            // todo: Enumeration 筛选器
                            <%_ } else if (fields[idx].fieldType === 'Blob') { _%>
                            // todo: Blob Text 筛选器
                            <%_ } _%>
            </clr-dg-column>
            <%_ } _%>

            <%_ for (idx in relationships) { _%>
            <%_ if (relationships[idx].relationshipType === 'many-to-one' || (relationships[idx].relationshipType === 'one-to-one' && relationships[idx].ownerSide === true) || (relationships[idx].relationshipType === 'many-to-many' && relationships[idx].ownerSide === true && pagination === 'no')) { _%>
            <%_ const fieldName = dto === 'no' ? "." + relationships[idx].otherEntityField : relationships[idx].otherEntityFieldCapitalized; _%>
            <clr-dg-column [clrDgField]="'<%=relationships[idx].relationshipName%>'"
                <%_ if (searchEngine === 'elasticsearch' && pagination !== 'no') { _%>
                [clrDgSortOrder]="sorters.<%=relationships[idx].relationshipName%>"
                <%_ } _%>
                <%_ if (searchEngine === 'elasticsearch' && pagination !== 'no') { _%>
                [(clrFilterValue)]="filters['<%=relationships[idx].relationshipName%>.<%=relationships[idx].otherEntityField%>']"
                <%_ } _%>
            >
                <ng-container *clrDgHideableColumn="{hidden: false}">
                {{'<%=`${i18nKeyPrefix}.${relationships[idx].relationshipName}` %>' | translate}}
                </ng-container>
            </clr-dg-column>
            <%_ } _%>
            <%_ } _%>

            <clr-dg-row
                <%_ if (pagination === 'pagination' || pagination === 'pager'){ _%>
                *ngFor="let <%=entityInstance %> of <%=entityInstancePlural %> ;trackBy: trackId"
                <%_ } else { _%>
                *clrDgItems="let <%=entityInstance %> of <%=entityInstancePlural %> ;trackBy: trackId"
                <%_ } _%>
                [clrDgItem]="<%=entityInstance %>">
                <clr-dg-cell>
                    {{<%=entityInstance %>.id}}
                </clr-dg-cell>
                <%_ for (idx in fields) {
                const fieldName = fields[idx].fieldName;
                const fieldNameCapitalized = fields[idx].fieldNameCapitalized;
                const fieldType = fields[idx].fieldType;
                const fieldTypeBlobContent = fields[idx].fieldTypeBlobContent; _%>
                <%_ if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'image') { _%>
                <clr-dg-cell>
                    <a *ngIf="<%= entityInstance %>.<%= fieldName %>" (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)">
                        <img [src]="'data:' + <%=entityInstance %>.<%=fieldName%>ContentType + ';base64,' + <%=entityInstance %>.<%=fieldName%>" style="max-height: 30px;" alt="<%=entityInstance %> image"/>
                    </a>
                    <span *ngIf="<%= entityInstance %>.<%= fieldName %>">{{<%= entityInstance %>.<%= fieldName %>ContentType}}, {{byteSize(<%= entityInstance %>.<%= fieldName %>)}}</span>
                </clr-dg-cell>
                <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'any') { _%>
                <clr-dg-cell>
                    <button class="btn btn-sm btn-link" *ngIf="<%= entityInstance %>.<%= fieldName %>" (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)">
                        {{'entity.action.open' | translate}}
                    </button>
                    <span *ngIf="<%= entityInstance %>.<%= fieldName %>">{{<%= entityInstance %>.<%= fieldName %>ContentType}}, {{byteSize(<%= entityInstance %>.<%= fieldName %>)}}</span>
                </clr-dg-cell>
                <%_ } else if (fields[idx].fieldIsEnum) { _%>
                <clr-dg-cell>{{'<%= angularAppName %>.<%= fieldType %>.' + <%= entityInstance %>.<%= fieldName %> | translate}}</clr-dg-cell>
                <%_ } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                <clr-dg-cell>{{<%=entityInstance %>.<%=fieldName%> | date:'medium'}}</clr-dg-cell>
                <%_ } else if (fieldType === 'LocalDate') { _%>
                <clr-dg-cell>{{<%=entityInstance %>.<%=fieldName%> | date:'mediumDate'}}</clr-dg-cell>
                <%_ } else if (fieldType === 'Boolean') { _%>
                <clr-dg-cell>
                    <clr-icon *ngIf="<%=entityInstance %>.<%=fieldName%>" shape="check" class="is-success"></clr-icon>
                    <clr-icon *ngIf="!<%=entityInstance %>.<%=fieldName%>" shape="times" class="is-error"></clr-icon>
                </clr-dg-cell>
                <%_ } else { _%>
                <clr-dg-cell>{{<%=entityInstance %>.<%=fieldName%>}}</clr-dg-cell>
                <%_ } _%>
                <%_ } _%>
                <%_ for (idx in relationships) {
                const relationshipType = relationships[idx].relationshipType;
                const ownerSide = relationships[idx].ownerSide;
                const relationshipFieldName = relationships[idx].relationshipFieldName;
                const relationshipFieldNamePlural = relationships[idx].relationshipFieldNamePlural;
                const otherEntityName = relationships[idx].otherEntityName;
                const otherEntityStateName = relationships[idx].otherEntityStateName;
                const otherEntityField = relationships[idx].otherEntityField;
                const otherEntityFieldCapitalized = relationships[idx].otherEntityFieldCapitalized; _%>
                <%_ if (relationshipType === 'many-to-one'
                || (relationshipType === 'one-to-one' && ownerSide === true)
                || (relationshipType === 'many-to-many' && ownerSide === true && pagination === 'no')) { _%>
                <clr-dg-cell>
                    <%_ if (otherEntityName === 'user') { _%>
                    <%_ if (relationshipType === 'many-to-many') { _%>
                    <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                                    {{<%= relationshipFieldName %>.<%= otherEntityField %>}}{{last ? '' : ', '}}
                                </span>
                    <%_ } else { _%>
                    <%_ if (dto === 'no') { _%>
                    {{<%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %>}}
                    <%_ } else { _%>
                    {{<%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %>}}
                    <%_ } _%>
                    <%_ } _%>
                    <%_ } else { _%>
                    <%_ if (relationshipType === 'many-to-many') { _%>
                    <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                                    <a class="form-control-static" [routerLink]="['../<%= otherEntityStateName %>', <%= relationshipFieldName %>?.id, 'view' ]">{{<%= relationshipFieldName %>.<%= otherEntityField %>}}</a>{{last ? '' : ', '}}
                                </span>
                    <%_ } else { _%>
                    <%_ if (dto === 'no') { _%>
                    <div *ngIf="<%= entityInstance + "." + relationshipFieldName %>">
                        {{<%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %>}}
                    </div>
                    <%_ } else { _%>
                    <div *ngIf="<%= entityInstance + "." + relationshipFieldName + "Id" %>">
                        {{<%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %>}}
                    </div>
                    <%_ } _%>
                    <%_ } _%>
                    <%_ } _%>
                </clr-dg-cell>
                <%_ } _%>
                <%_ } _%>
            </clr-dg-row>

            <clr-dg-footer>
                <clr-dg-column-toggle>
                    <clr-dg-column-toggle-title>{{'entity.datagrid.fieldDisplay.title' | translate}}</clr-dg-column-toggle-title>
                    <clr-dg-column-toggle-button clrType="selectAll">{{'entity.datagrid.fieldDisplay.showAll' | translate}}</clr-dg-column-toggle-button>
                    <clr-dg-column-toggle-button clrType="ok">
                        <clr-icon shape="check"></clr-icon>
                    </clr-dg-column-toggle-button>
                </clr-dg-column-toggle>
                <%_ if (databaseType !== 'cassandra') { _%>
                <clr-dg-pagination #pagination [clrDgPageSize]="itemsPerPage" <%_ if (pagination === 'pagination' || pagination === 'pager') { _%> [clrDgTotalItems]="totalItems" [(clrDgPage)]="page" <%_ } _%>>
                    {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}
                    {{'entity.datagrid.pagination.of' | translate}} {{pagination.totalItems}} <span jhiTranslate="<%= i18nKeyPrefix %>.detail.title"><%= entityClassPluralHumanized %></span>
                </clr-dg-pagination>
                <%_ } _%>
            </clr-dg-footer>
        </clr-datagrid>
        <%_}_%>

    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-primary" (click)="opened = false;">{{'entity.selectDialog.cancel' | translate}}</button>
        <button type="button" class="btn btn-primary" (click)="confirm()">{{'entity.selectDialog.confirm' | translate}}</button>
    </div>

</clr-modal>

