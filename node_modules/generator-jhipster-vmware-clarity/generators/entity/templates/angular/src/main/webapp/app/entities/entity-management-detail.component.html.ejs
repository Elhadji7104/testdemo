<h1 jhiTranslate="<%= i18nKeyPrefix %>.home.title"><%= entityClassPluralHumanized %></h1>
<clr-stack-view>
    <clr-stack-header><span jhiTranslate="<%= i18nKeyPrefix %>.detail.title"><%= entityClassHumanized %></span> {{<%= entityInstance %>.id}}</clr-stack-header>

    <clr-stack-block [clrSbExpanded]="true">
        <clr-stack-label>{{'global.field.id' | translate }}</clr-stack-label>
        <clr-stack-content>{{<%= entityInstance %>.id}}</clr-stack-content>

         <%_ for (idx in fields) {
            const fieldName = fields[idx].fieldName;
            const fieldType = fields[idx].fieldType;
            const fieldTypeBlobContent = fields[idx].fieldTypeBlobContent; _%>
            <clr-stack-block>
                <clr-stack-label>
                    <span jhiTranslate="<%= i18nKeyPrefix %>.<%= fieldName %>"><%= fields[idx].fieldNameHumanized %></span>
                </clr-stack-label>
                <clr-stack-content>
                    <%_ if (fields[idx].fieldIsEnum) { _%>
                    <span jhiTranslate="{{'<%= angularAppName %>.<%= fieldType %>.' + <%= entityInstance %>.<%= fieldName %>}}">{{<%= entityInstance %>.<%= fieldName %>}}</span>
                    <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'image') { _%>
                    <div *ngIf="<%= entityInstance %>.<%= fieldName %>">
                        <a (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)">
                            <img [src]="'data:' + <%=entityInstance %>.<%= fieldName %>ContentType + ';base64,' + <%= entityInstance %>.<%= fieldName %>" style="max-width: 100%;" alt="<%=entityInstance %> image"/>
                        </a>
                        {{<%= entityInstance %>.<%= fieldName %>ContentType}}, {{byteSize(<%= entityInstance %>.<%= fieldName %>)}}
                    </div>
                    <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'any') { _%>
                    <div *ngIf="<%= entityInstance %>.<%= fieldName %>">
                        <a (click)="openFile(<%= entityInstance %>.<%= fieldName %>ContentType, <%= entityInstance %>.<%= fieldName %>)" jhiTranslate="entity.action.open">open</a>
                        {{<%= entityInstance %>.<%= fieldName %>ContentType}}, {{byteSize(<%= entityInstance %>.<%= fieldName %>)}}
                    </div>
                    <%_ } else if(fieldType === 'Boolean') { _%>
                    <span>
                        <clr-icon *ngIf="<%= entityInstance %>.<%= fieldName %>" shape="check" class="is-success"></clr-icon>
                        <clr-icon *ngIf="!<%= entityInstance %>.<%= fieldName %>" shape="times" class="is-error"></clr-icon>
                    </span>
                    <%_ } else { _%>
                    <span>{{<%= entityInstance %>.<%= fieldName %>}}</span>
                    <%_ } _%>
                </clr-stack-content>
            </clr-stack-block>
            <%_ } _%>
            <%_ for (idx in relationships) {
            const relationshipType = relationships[idx].relationshipType;
            const ownerSide = relationships[idx].ownerSide;
            const relationshipName = relationships[idx].relationshipName;
            const relationshipFieldName = relationships[idx].relationshipFieldName;
            const relationshipFieldNamePlural = relationships[idx].relationshipFieldNamePlural;
            const relationshipNameHumanized = relationships[idx].relationshipNameHumanized;
            const otherEntityName = relationships[idx].otherEntityName;
            const otherEntityStateName = relationships[idx].otherEntityStateName;
            const otherEntityField = relationships[idx].otherEntityField;
            const otherEntityFieldCapitalized = relationships[idx].otherEntityFieldCapitalized;
            if (relationshipType === 'many-to-one'
            || (relationshipType === 'one-to-one' && ownerSide === true)
            || (relationshipType === 'many-to-many' && ownerSide === true)) { _%>
            <clr-stack-block>
            <clr-stack-label>
                <span jhiTranslate="<%= i18nKeyPrefix %>.<%= relationshipName %>"><%= relationshipNameHumanized %></span>
            </clr-stack-label>
            <clr-stack-content>
                <%_ if (otherEntityName === 'user') { _%>
                <%_ if (relationshipType === 'many-to-many') { _%>
                <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                    {{<%= relationshipFieldName %>.<%= otherEntityField %>}}{{last ? '' : ', '}}
                </span>
                <%_ } else { _%>
                <%_ if (dto === 'no') { _%>
                {{<%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %>}}
                <%_ } else { _%>
                {{<%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %>}}
                <%_ } _%>
                <%_ } _%>
                <%_ } else { _%>
                <%_ if (relationshipType === 'many-to-many') { _%>
                <span *ngFor="let <%= relationshipFieldName %> of <%= entityInstance %>.<%= relationshipFieldNamePlural %>; let last = last">
                    <a [routerLink]="['../../../<%= otherEntityStateName %>', <%= relationshipFieldName %>?.id, 'view' ]">{{<%= relationshipFieldName %>.<%= otherEntityField %>}}</a>{{last ? '' : ', '}}
                </span>
                <%_ } else { _%>
                <%_ if (dto === 'no') { _%>
                <div *ngIf="<%= entityInstance + '.' + relationshipFieldName %>">
                    <a [routerLink]="['../../../<%= otherEntityStateName %>', <%= entityInstance + '.' + relationshipFieldName + '?.id' %>, 'view']">{{<%= entityInstance + "." + relationshipFieldName + "?." + otherEntityField %>}}</a>
                </div>
                <%_ } else { _%>
                <div *ngIf="<%= entityInstance + '.' + relationshipFieldName + "Id" %>">
                    <a [routerLink]="['../../../<%= otherEntityStateName %>', <%= entityInstance + '.' + relationshipFieldName + "Id" %>, 'view']">{{<%= entityInstance + "." + relationshipFieldName + otherEntityFieldCapitalized %>}}</a>
                </div>
                <%_ } _%>
                <%_ } _%>
                <%_ } _%>
            </clr-stack-content>
            </clr-stack-block>
            <%_ } _%>
            <%_ } _%>
    </clr-stack-block>
</clr-stack-view>
<br/>
<button type="button" class="btn btn-outline" (click)="previousState()">
    <clr-icon shape="undo"></clr-icon>&nbsp;<span jhiTranslate="entity.action.back"> Back</span>
</button>
<button type="button" class="btn btn-primary" [routerLink]="['/<%= microserviceName %>/<%= entityInstance %>', <%= entityInstance %>.id, 'edit']">
    <clr-icon shape="pencil"></clr-icon>&nbsp;<span jhiTranslate="entity.action.edit"> Edit</span>
</button>
